/* Roboto, Roboto Slab, and Roboto Mono */
@import url('https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@300;400;500&family=Roboto+Slab:wght@300;400;500&family=Roboto:ital,wght@0,300;0,400;0,500;1,300;1,400;1,500&display=swap');
@import url('https://fonts.googleapis.com/icon?family=Material+Icons');

@import "documents-overview.css";
@import "forum.css";
@import "grades-graph.css";
@import "grades-overview.css";
@import "assignments-overview.css";

/* Define the colours here. */
/* Source: https://material.io/resources/color/ */
body {
    /* Lea Green */
    --primary: #8bc34a;
    --primary-opaque: rgba(139, 195, 74, 0.5);
    --primary-light: #bef67a;
    --primary-dark: #5a9216;
    --primary-darker: #255d00;

    /* MIO Blue */
    --secondary: #0288d1;
    --secondary-opaque: rgba(2, 136, 209, 0.5);
    --secondary-light: #5eb8ff;
    --secondary-dark: #005b9f;
    --secondary-darker: #003270;

    --error: #b00020;

    /* Dark grey, used to indicate the file document type. */
    --dark-grey: #1b1b1b;
    /* Dark blue, used to indicate the link document type. */
    --dark-blue: #000045;
    /* Dark red, used to indicate the video document type. */
    --dark-red: #300000;

    /* Greyscales */
    --grey-100: #f5f5f5;
    --grey-200: #eeeeee;
    --grey-300: #e0e0e0;
    --grey-400: #bdbdbd;
    --grey-500: #9e9e9e;
    --grey-600: #757575;
    --grey-700: #616161;
    --grey-800: #424242;
    --grey-900: #212121;
}

/* Container for all Lea content injections. */
.omniplus-lea-container {
    padding: 20px;

    /* Since the body scroll is disabled, ensure that the container is in the screen so its horizontal scroll bar shows up. */
    height: calc(100vh - 120px);
    /* Leave space for the left lea toolbar */
    max-width: calc(100vw - 400px);

    /* Roboto */
    font-family: "Roboto", "Helvetica", "Arial", sans-serif;

    --badge-card-width: 300px;

    --badge-size: 36px;
    --badge-background: var(--dark-grey);
    --badge-clickable-background: var(--primary);
    --badge-clickable-background-hovered: var(--primary-dark);
    --badge-clickable-background-focused: var(--primary-darker);
    --badge-clickable-secondary-background: var(--secondary);
    --badge-clickable-secondary-background-hovered: var(--secondary-dark);
    --badge-clickable-secondary-background-focused: var(--secondary-darker);
}

.omniplus-lea-container .badged-card, .omniplus-lea-container .badged-card-horizontal {
    display: flex;
    justify-content: flex-start;
    align-items: stretch;

    /* Prevent long words from overflowing the container. */
    overflow-wrap: anywhere;
}

.omniplus-lea-container .badged-card {
    /* Reverse horizontal flexbox */
    /* Reverse the order to put the icons on the right and the card itself on the left.
     This is done instead of reversing the order of the elements so the card is always
     above the badges without having to specify indices. */
    flex-direction: row-reverse;
}

/* For objects with more badges, excessive badges may stretch the length of the card and leave out empty space.
This means that it's a better idea to align the badges to the bottom of the cards rather than the right. */
.omniplus-lea-container .badged-card-horizontal {
    /* Vertical flexbox. See badged-card comment for reasons to reverse. */
    flex-direction: column-reverse;
}

.omniplus-lea-container .badged-card .badge-holder, .omniplus-lea-container .badged-card-horizontal .badge-holder {
    /* Prevent the badges from being squished by the description. */
    flex-shrink: 0;

    display: flex;
    justify-content: flex-start;
    align-items: stretch;

    /* Give the badges a bit of space from each other. */
    gap: 8px;
}

.omniplus-lea-container .badged-card .badge-holder {
    width: var(--badge-size);
    /* Give the badges a bit of space vertically. */
    /* Also to match the padding of the card's content. */
    margin-top: 12px;
    margin-bottom: 12px;

    /* Vertical Flexbox */
    flex-direction: column;
}

.omniplus-lea-container .badged-card-horizontal .badge-holder {
    height: var(--badge-size);
    /* Give the badges a bit of space vertically. */
    /* Also to match the padding of the card's content. */
    margin-left: 12px;
    margin-right: 12px;

    /* Horizontal Flexbox */
    flex-direction: row;
}

.omniplus-lea-container .badged-card .badge-holder .badge,
.omniplus-lea-container .badged-card-horizontal .badge-holder .badge {
    /* Centre-align horizontally */
    text-align: center;
    /* Using flexbox to centre-align vertically */
    display: flex;
    flex-direction: column;
    justify-content: center;

    /* icon size and colour */
    color: white;
    font-size: calc(var(--badge-size) * 0.67);

    text-decoration: none !important;
}

.omniplus-lea-container .badged-card .badge-holder .badge {
    height: var(--badge-size);

    /* Rounded corners on top and bottom left. */
    /* border-radius: 2px 0 0 2px; */
    border-radius: 0 2px 2px 0;
}

.omniplus-lea-container .badged-card-horizontal .badge-holder .badge {
    width: var(--badge-size);

    /* Rounded corners on bottom left and right. */
    border-radius: 0 0 2px 2px;
}

.omniplus-lea-container .badged-card .badge-holder .default {
    background-color: var(--dark-grey);
}

.omniplus-lea-container .badged-card .badge-holder .clickable,
.omniplus-lea-container .badged-card-horizontal .badge-holder .clickable {
    /* Pointer indicating that the file can be downloaded. */
    cursor: pointer;
    background-color: var(--badge-clickable-background);
}
.omniplus-lea-container .badged-card .badge-holder .clickable:hover,
.omniplus-lea-container .badged-card-horizontal .badge-holder .clickable:hover {
    background-color: var(--badge-clickable-background-hovered);
}
.omniplus-lea-container .badged-card .badge-holder .clickable:focus,
.omniplus-lea-container .badged-card-horizontal .badge-holder .clickable:focus {
    background-color: var(--badge-clickable-background-focused);
}

.omniplus-lea-container .badged-card .badge-holder .clickable-disabled,
.omniplus-lea-container .badged-card-horizontal .badge-holder .clickable-disabled {
    /* Pointer indicating that this cannot be interacted with. */
    cursor: not-allowed;
    background-color: var(--primary-opaque);
}

.omniplus-lea-container .badged-card .badge-holder .clickable-secondary,
.omniplus-lea-container .badged-card-horizontal .badge-holder .clickable-secondary {
    /* Pointer indicating that the file can be downloaded. */
    cursor: pointer;
    background-color: var(--badge-clickable-secondary-background);

    transition-duration: 0.2s;
}
.omniplus-lea-container .badged-card .badge-holder .clickable-secondary:hover,
.omniplus-lea-container .badged-card-horizontal .badge-holder .clickable-secondary:hover {
    background-color: var(--badge-clickable-secondary-background-hovered);
}
.omniplus-lea-container .badged-card .badge-holder .clickable-secondary:focus,
.omniplus-lea-container .badged-card-horizontal .badge-holder .clickable-secondary:focus {
    background-color: var(--badge-clickable-secondary-background-focused);
}

.omniplus-lea-container .badged-card .badge-holder .clickable-secondary-disabled,
.omniplus-lea-container .badged-card-horizontal .badge-holder .clickable-secondary-disabled {
    /* Pointer indicating that this cannot be interacted with. */
    cursor: not-allowed;
    background-color: var(--secondary-opaque);
}

.omniplus-lea-container .card {
    /* The card fills the horizontal content. */
    flex-grow: 1;
    border-radius: 2px;
    /* Material 2dp shadow */
    box-shadow: 0 2px 2px 0 rgba(0,0,0,.14),0 3px 1px -2px rgba(0,0,0,.2),0 1px 5px 0 rgba(0,0,0,.12);

    padding: 12px;

    /* Vertical Flexbox */
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: stretch;

    /* Added space between title and descriptions. */
    gap: 8px;
}

.omniplus-lea-container .loading {
    flex-grow: 1;

    /* Center the animated loader */
    display: flex;
    justify-content: center;
    align-items: center;
}

.omniplus-lea-container .loading .loading-spinner {
    width: 120px;
    height: 120px;

    border: 8px solid white;
    border-top: 8px solid var(--grey-600);
    border-radius: 50%;

    animation: spin 1s linear infinite;
}

@keyframes spin {
    0% {
        transform: rotate(0deg);
    }
    100% {
        transform: rotate(360deg);
    }
}